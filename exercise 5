/*------------------------------------------------------------------------------
The main Object contains Three Nested Objects
They are similar in every way except that one of them does not have game versions
Loop For should only be used to loop elements
All you have to do is solve the instructions and fill in the blanks to reach the desired result
You should not change the structure of the code
. All you have to do is write your own code in place of the question marks
------------------------------------------------------------------------------*/


// The Object To Work With
let myFavGames = {
    "Trinity Universe": {
      publisher: "NIS America",
      price: 40,
    },
    "Titan Quest": {
      publisher: "THQ",
      bestThree: {
        one: "Immortal Throne",
        two: "Ragnarök",
        three: "Atlantis",
      },
      price: 50,
    },
    YS: {
      publisher: "Falcom",
      bestThree: {
        one: "Oath in Felghana",
        two: "Ark Of Napishtim",
        three: "origin",
      },
      price: 40,
    },
  };
  
    // TODO => How To Get Object Length ?
  let objectLength = object.keys(myFavGames).length;
  
  for (let i = 0; i < objectLength; i++) {
    let gameName = Object.keys(myFavGames)[i];
    console.log(`The Game Name Is $[gameName]`);
    console.log(The Publisher Is ${mFavGames[gameName]}.publisher]`);
    console.log(`${mFavGames[gameName]}.price`);
  
    // TODO => Check If Nested Object Has Property (bestThree)
  if (myFavGames[gameName].bestThree) {
    console.log("- Game Has Releases");
    console.log(`First => ${myFavGames[gameName].bestThree.one}`);
    console.log(`Second => ${myFavGames[gameName].bestThree.two}`);
    console.log(`Third => ${myFavGames[gameName].bestThree.three}`);
  }
  console.log("#".repeat(20));
  
 
  // ! Needed Output
  
//   "The Game Name Is Trinity Universe"
//   "The Publisher Is NIS America"
//   "The Price Is 40"
//   "####################"
//   "The Game Name Is Titan Quest"
//   "The Publisher Is THQ"
//   "The Price Is 50"
//   "- Game Has Releases"
//   "First => Immortal Throne"
//   "Second => Ragnarök"
//   "Third => Atlantis"
//   "####################"
//   "The Game Name Is YS"
//   "The Publisher Is Falcom"
//   "The Price Is 40"
//   "- Game Has Releases"
//   "First => Oath in Felghana"
//   "Second => Ark Of Napishtim"
//   "Third => origin"
//   "####################"
